/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* fonts */
/* Gutter */
/* Breakpoints */
.header .profile-image, .services-in-details .service-image, .services .service-image-wrapper {
  border-radius: 50%;
  overflow: hidden;
  -webkit-box-shadow: 0 1px 4px 0 #04362315, 0 1px 2px 0 #04362315;
          box-shadow: 0 1px 4px 0 #04362315, 0 1px 2px 0 #04362315;
}

.header .profile-image, .services-in-details .service-image {
  width: 260px;
  height: 260px;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 260px;
          flex: 0 0 260px;
}

@media screen and (max-width: 767px) {
  .header .profile-image, .services-in-details .service-image {
    width: 160px;
    height: 160px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 160px;
            flex: 0 0 160px;
  }
}

.services .service-image-wrapper {
  width: 200px;
  height: 200px;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 200px;
          flex: 0 0 200px;
}

@media screen and (max-width: 767px) {
  .services .service-image-wrapper {
    width: 140px;
    height: 140px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 140px;
            flex: 0 0 140px;
  }
}

.h4.sqaure-grid-name, .carousel .name {
  text-align: left;
  margin: 0;
  line-height: 1.12;
}

.sqaure-grid-additional-info, .carousel .position {
  font-style: italic;
  line-height: 1.24;
  margin: 6px 0 0;
}

@font-face {
  font-family: 'Dosis';
  src: url("../../assets/fonts/Dosis-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Dosis Medium';
  src: url("../../assets/fonts/Dosis-Medium.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Exo Light';
  src: url("../../assets/fonts/Exo-Light.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Exo Regular';
  src: url("../../assets/fonts/Exo-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Exo Bold';
  src: url("../../assets/fonts/Exo-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Exo Italic';
  src: url("../../assets/fonts/Exo-Italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: "Dosis", Helvetica, Arial, sans-serif;
  font-weight: 400;
  line-height: 1.15;
  margin: 1.5em 0 .5em;
  text-align: center;
}

h1,
.h1 {
  font-size: 36px;
}

@media screen and (min-width: 768px) {
  h1,
  .h1 {
    font-size: 64px;
  }
}

h2,
.h2 {
  font-size: 28px;
  line-height: 1.64;
}

@media screen and (min-width: 768px) {
  h2,
  .h2 {
    font-size: 42px;
  }
}

h3,
.h3 {
  font-size: 24px;
}

@media screen and (min-width: 768px) {
  h3,
  .h3 {
    font-size: 34px;
  }
}

h4,
.h4 {
  font-size: 22px;
}

@media screen and (min-width: 768px) {
  h4,
  .h4 {
    font-size: 26px;
  }
}

h5,
.h5 {
  font-size: 13px;
}

@media screen and (min-width: 768px) {
  h5,
  .h5 {
    font-size: 16px;
  }
}

h6,
.h6 {
  font-size: 12px;
}

/* Paragraph */
p {
  margin: 0 0 16px;
  line-height: 1.52;
}

ul {
  line-height: 1.52;
  list-style-type: square;
  padding-left: 21px;
}

/*
* Hide only visually, but have it available for screen readers: h5bp.com/v
*/
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/*
* Extends the .visuallyhidden class to allow the element to be focusable
* when navigated to via the keyboard: h5bp.com/p
*/
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

html {
  font: normal 16px "Exo Regular", Helvetica, Arial, sans-serif;
  color: #666;
}

body {
  background-color: #fff;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

section {
  position: relative;
  padding: 80px 0;
}

section h2 {
  margin: 0 0 36px;
  text-transform: uppercase;
}

@media screen and (max-width: 767px) {
  section h2 {
    margin: 0 0 18px;
  }
}

section.section-creamy::before {
  background: #F6F7EB;
}

section.section-dark {
  color: #fff;
}

section.section-dark::before {
  background: #2d1313;
}

section.section-creamy .container,
section.section-creamy .container-narrow, section.section-dark .container,
section.section-dark .container-narrow {
  position: relative;
  z-index: 1;
}

section.section-creamy::before, section.section-dark::before {
  content: '';
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 100%;
  -webkit-transform: translate(-50%, -50%) rotate(-4deg);
          transform: translate(-50%, -50%) rotate(-4deg);
}

img, svg {
  max-width: 100%;
}

.sections-wrapper {
  overflow: hidden;
}

.sqaure-grid-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 64px;
}

@media screen and (max-width: 767px) {
  .sqaure-grid-item {
    margin-bottom: 24px;
  }
}

.sqaure-grid-item-icon {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 58px;
          flex: 0 0 58px;
  width: 58px;
  height: 58px;
  border-radius: 4px;
  overflow: hidden;
  -webkit-box-shadow: 0 1px 4px 0 #04362315, 0 1px 2px 0 #04362315;
          box-shadow: 0 1px 4px 0 #04362315, 0 1px 2px 0 #04362315;
  background: #fff;
}

.sqaure-grid-item-icon img {
  display: block;
}

@media screen and (max-width: 767px) {
  .sqaure-grid-item-icon {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 48px;
            flex: 0 0 48px;
    width: 48px;
    height: 48px;
  }
}

.sqaure-grid-details {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding-left: 16px;
}

.h4.sqaure-grid-name {
  font-weight: bold;
}

.container {
  max-width: 1260px;
  margin: 0 auto;
  padding: 0 16px;
}

.container-narrow {
  max-width: 960px;
  margin: 0 auto;
  padding: 0 16px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-right: -8px;
  margin-left: -8px;
}

div[class^="col-"] {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: 8px;
  padding-left: 8px;
}

.col-6 {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  max-width: 50%;
}

@media screen and (min-width: 768px) {
  .col-sm-4 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.33333%;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }
  .col-sm-6 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }
}

form input[type="email"],
form input[type="text"],
form textarea {
  padding: 14px 18px;
  border: 1px solid #aaa;
  border-radius: 4px;
  font-size: 16px;
  outline: none;
  -webkit-transition: all .2s;
  transition: all .2s;
}

form input[type="email"],
form input[type="text"] {
  width: 60%;
}

@media screen and (max-width: 767px) {
  form input[type="email"],
  form input[type="text"] {
    width: 100%;
  }
}

form textarea {
  width: 100%;
  height: 300px;
  resize: none;
}

form .checkbox {
  position: relative;
  margin: 16px 0;
}

form .checkbox label {
  position: relative;
  color: #aaa;
  cursor: pointer;
  padding-left: 32px;
  z-index: 1;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

form .checkbox input:checked + span::before {
  content: "";
  position: absolute;
  left: 2px;
  top: 2px;
  right: 2px;
  bottom: 2px;
  background: url(../../../assets/images/check.svg);
  background-size: cover;
  background-position: center;
}

form .checkbox-custom {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  left: 0;
  top: -3px;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 20px;
          flex: 0 0 20px;
  width: 20px;
  height: 20px;
  border: 1px solid #aaa;
  border-radius: 4px;
  margin-right: 8px;
}

form .input-wrapper {
  position: relative;
}

form .input-wrapper + .input-wrapper {
  margin-top: 24px;
}

form .input-wrapper label {
  position: absolute;
  background: #fff;
  top: 16px;
  left: 10px;
  font-size: 16px;
  padding: 0 8px;
  -webkit-transition: all .2s;
  transition: all .2s;
  color: #aaa;
}

form .input-wrapper label::before {
  content: '';
  display: block;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  top: 50%;
  background: #fff;
}

form .input-wrapper label span {
  position: relative;
  z-index: 2;
}

form .input-wrapper textarea:focus,
form .input-wrapper input:focus {
  border-color: #FFBA08;
}

form .input-wrapper textarea:focus + label,
form .input-wrapper input:focus + label {
  color: #FFBA08;
  background: #F6F7EB;
}

form .input-wrapper textarea:focus + label::before,
form .input-wrapper input:focus + label::before {
  content: '';
  display: block;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  top: 50%;
  background: #fff;
}

form .input-wrapper textarea.input-field + label,
form .input-wrapper textarea:focus + label,
form .input-wrapper input.input-field + label,
form .input-wrapper input:focus + label {
  font-size: 13px;
  -webkit-transform: translateY(-22px);
          transform: translateY(-22px);
  -webkit-transition: all .2s;
  transition: all .2s;
}

form .input-wrapper textarea.input-field + label,
form .input-wrapper input.input-field + label {
  background: #F6F7EB;
}

form input[type="submit"] {
  margin-top: 24px;
}

.carousel {
  position: relative;
}

.carousel ul {
  list-style-type: none;
  padding: 0;
}

.carousel ul > li {
  display: none;
}

.carousel p {
  text-align: justify;
}

.carousel .carousel-arrow {
  position: absolute;
  padding: 16px;
  z-index: 2;
  cursor: pointer;
}

.carousel .carousel-arrow img {
  width: 36px;
}

@media screen and (min-width: 768px) {
  .carousel .carousel-arrow {
    top: 36px;
  }
}

@media screen and (max-width: 767px) {
  .carousel .carousel-arrow {
    bottom: 0;
  }
}

.carousel .arrow-left {
  left: -60px;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.carousel .arrow-right {
  right: -60px;
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
}

.carousel .item-inner {
  padding: 0 16px;
}

.btn-primary {
  display: inline-block;
  border-radius: 4px;
  font-weight: normal;
  font-size: 13px;
  padding: 10px 18px;
  text-decoration: none;
  min-width: 120px;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: all .2s;
  transition: all .2s;
  text-transform: uppercase;
  font-family: "Exo Bold", Helvetica, Arial, sans-serif;
}

.btn-primary {
  color: #000;
  background-color: #FFBA08;
  border: 1px solid #FFBA08;
}

.btn-primary:hover {
  background-color: #ffc531;
}

.btn-primary.disabled {
  background-color: #676767;
  border: 1px solid #676767;
  color: #fff;
  cursor: not-allowed;
}

.btn-primary.main-cta {
  padding: 12px 26px;
  font-size: 15px;
}

.link {
  text-decoration: underline;
  color: #FFBA08;
}

.header {
  position: relative;
  width: 100%;
}

@media screen and (min-width: 768px) {
  .header {
    height: 95vh;
  }
}

.header .header-nav {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 2;
}

@media screen and (max-width: 767px) {
  .header .header-nav {
    display: none;
  }
}

.header .nav-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 64px;
}

.header .person-wrapper {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 100%;
          flex: 1 1 100%;
}

.header .nav-list {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 100%;
  padding: 0;
}

.header .nav-item {
  height: 100%;
}

.header .nav-item + .nav-item {
  margin-left: 24px;
}

.header .nav-item a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  height: 100%;
  text-decoration: none;
  color: #fff;
  -webkit-transition: color .2s;
  transition: color .2s;
}

.header .nav-item a::before {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0;
  height: 3px;
  background: #FFBA08;
  -webkit-transition: width .2s;
  transition: width .2s;
}

.header .nav-item a:hover {
  color: #FFBA08;
}

.header .nav-item a:hover::before {
  width: 100%;
}

.header .hero-wrapper {
  position: relative;
  width: 100%;
  background-image: url(/assets/images/hero-image.jpg);
  background-size: cover;
  background-position: center;
  background-color: rgba(0, 0, 0, 0.5);
  background-blend-mode: overlay;
}

@media screen and (min-width: 768px) {
  .header .hero-wrapper {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 220px;
  }
}

@media screen and (max-width: 767px) {
  .header .hero-wrapper {
    height: 60vh;
  }
}

.header .hero-heading-wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.header .hero-heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: 100%;
  padding: 0 16px;
}

.header .hero-heading .heading {
  margin-top: 0;
}

.header .hero-heading .tagline {
  margin-bottom: 0;
  font-size: 24px;
  max-width: 820px;
  margin: 0 auto 24px;
  text-align: center;
  font-family: "Exo Light", Helvetica, Arial, sans-serif;
}

@media screen and (max-width: 767px) {
  .header .hero-heading .tagline {
    font-size: 18px;
  }
}

.header .hero-heading .heading,
.header .hero-heading .tagline {
  color: #fff;
}

.header .hero-buttons-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  white-space: nowrap;
}

@media screen and (max-width: 767px) {
  .header .hero-buttons-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding-bottom: 32px;
  }
}

.header .or-word {
  padding-left: 8px;
  color: #fff;
}

@media screen and (max-width: 767px) {
  .header .or-word {
    padding: 8px 0;
  }
}

.header .profile-wrapper {
  position: relative;
  width: 100%;
  z-index: 1;
}

@media screen and (min-width: 768px) {
  .header .profile-wrapper {
    position: absolute;
    left: 0;
    bottom: 30px;
  }
}

@media screen and (max-width: 767px) {
  .header .profile-wrapper {
    margin-top: -30px;
    padding-bottom: 24px;
  }
}

.header .profile-inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media screen and (max-width: 767px) {
  .header .profile-inner {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.header .profile-details {
  padding-left: 16px;
}

.header .profile-details h2 {
  text-align: left;
  margin-bottom: 0;
}

.header .profile-details p {
  font-family: "Exo Regular", Helvetica, Arial, sans-serif;
}

.header .profile-details .occupation {
  font-size: 18px;
  margin: 4px 0 0;
}

.header .profile-details .profile-info {
  font-size: 16px;
  margin: 16px 0 0;
}

@media screen and (max-width: 767px) {
  .header .profile-details {
    padding-left: 0;
  }
  .header .profile-details h2, .header .profile-details p {
    text-align: center;
  }
  .header .profile-details h2 {
    margin-top: 8px;
  }
}

.about {
  padding-top: 0;
}

.about p:last-of-type {
  margin-bottom: 0;
}

.services .service-inner {
  padding: 0 16px;
}

@media screen and (max-width: 767px) {
  .services .service-inner {
    margin-bottom: 56px;
  }
}

@media screen and (max-width: 767px) {
  .services .col-sm-4:last-of-type .service-inner {
    margin-bottom: 0;
  }
}

.services .service-image-wrapper {
  margin: 0 auto;
}

.services .service-description {
  text-align: center;
  padding: 0 16px;
}

@media screen and (max-width: 767px) {
  .services .service-description {
    padding: 0;
    margin: 0;
  }
}

@media screen and (max-width: 767px) {
  .services h3 {
    margin-top: 16px;
  }
}

.services-in-details {
  background-size: cover;
  background-position: center;
}

.services-in-details .services-in-details-container {
  max-width: 1060px;
  margin: 0 auto;
}

.services-in-details .service-details {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media screen and (min-width: 768px) {
  .services-in-details .service-details.img-to-left .service-image-wrapper {
    margin-right: 48px;
  }
}

@media screen and (min-width: 768px) {
  .services-in-details .service-details.img-to-right .service-image-wrapper {
    margin-right: 48px;
  }
}

@media screen and (max-width: 767px) {
  .services-in-details .service-details.img-to-right .service-description {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
  }
}

.services-in-details .service-details + .service-details {
  margin-top: 80px;
}

@media screen and (max-width: 767px) {
  .services-in-details .service-details + .service-details {
    margin-top: 56px;
  }
}

@media screen and (max-width: 767px) {
  .services-in-details .service-details {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.services-in-details .service-image-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.services-in-details .service-name {
  margin: 0 0 16px;
  white-space: nowrap;
}

@media screen and (max-width: 767px) {
  .services-in-details .service-name {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
    margin: 16px 0 24px;
  }
}

.services-in-details .list-title {
  margin-bottom: 8px;
}

.contact-me .thank-you-message {
  padding-top: 32px;
  font-size: 18px;
  opacity: 0;
}

@media screen and (max-width: 767px) {
  .contact-me .form-col {
    -webkit-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
  }
  .contact-me .desktop-titple {
    display: none;
  }
}

@media screen and (min-width: 768px) {
  .contact-me .mobile-titple {
    display: none;
  }
}

.contact-me::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 80px;
  background: #F6F7EB;
}

@media screen and (min-width: 768px) {
  .contact-me .list-wrapper {
    padding-left: 150px;
  }
}

@media screen and (max-width: 767px) {
  .contact-me .list-wrapper {
    margin-bottom: 64px;
  }
}

.contact-me h3 {
  margin: 0 0 24px;
}

.contact-me ul {
  list-style-type: none;
  padding-left: 0;
}

.contact-me ul li {
  position: relative;
  padding-left: 48px;
}

.contact-me ul li + li {
  margin-top: 24px;
}

.contact-me ul li::before {
  content: '';
  position: absolute;
  left: 0;
  top: -6px;
  width: 36px;
  height: 36px;
  background: url(../../../assets/images/tick-mark.png);
  background-size: cover;
  background-position: center;
}

.timeline .timeline-wrapper {
  padding: 64px 0;
  position: relative;
}

.timeline .timeline-wrapper::before {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 50%;
  width: 1px;
  height: 100%;
  -webkit-transform: translatex(-50%);
          transform: translatex(-50%);
  background: #D1D1D1;
}

@media screen and (max-width: 767px) {
  .timeline .timeline-wrapper::before {
    left: 25px;
  }
}

.timeline .timeline-section {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 240px;
}

.timeline .timeline-section > * {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%;
  max-width: 50%;
}

.timeline .timeline-section::before, .timeline .timeline-section::after {
  content: '';
  display: block;
  position: absolute;
  left: 50%;
  -webkit-transform: translatex(-50%);
          transform: translatex(-50%);
}

.timeline .timeline-section::before {
  top: 0;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  border: 4px solid #FFBA08;
  background: #fff;
}

.timeline .timeline-section::after {
  top: 13px;
  width: 23px;
  height: 23px;
  border-radius: 50%;
  background: #FFBA08;
}

.timeline .timeline-section:last-child {
  min-height: initial;
}

@media screen and (max-width: 767px) {
  .timeline .timeline-section {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding-left: 70px;
  }
  .timeline .timeline-section > * {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
  .timeline .timeline-section::before, .timeline .timeline-section::after {
    left: 25px;
  }
  .timeline .timeline-section:nth-child(even) .timeline-right {
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }
}

.timeline .timeline-left {
  padding-right: 64px;
  text-align: right;
}

.timeline .timeline-left .position {
  text-align: right;
}

@media screen and (max-width: 767px) {
  .timeline .timeline-left {
    padding: 0;
  }
}

.timeline .timeline-right {
  padding-left: 64px;
  text-align: left;
}

.timeline .timeline-right .position {
  text-align: left;
}

@media screen and (max-width: 767px) {
  .timeline .timeline-left,
  .timeline .timeline-right {
    padding: 0;
    text-align: left;
  }
  .timeline .timeline-left .position,
  .timeline .timeline-right .position {
    text-align: left;
  }
  .timeline .timeline-left ul,
  .timeline .timeline-right ul {
    padding: 0 0 24px;
  }
}

.timeline .date {
  font-family: "Dosis", Helvetica, Arial, sans-serif;
  font-size: 24px;
  margin-top: 11px;
}

@media screen and (max-width: 767px) {
  .timeline .date {
    margin-bottom: 8px;
    margin-top: 15px;
    font-size: 18px;
  }
}

.timeline .position {
  margin-top: 0px;
  font-weight: bold;
}

.timeline .link {
  display: block;
  margin-bottom: 8px;
}

.timeline ul {
  list-style-type: none;
  padding: 0;
}

.timeline ul li a {
  color: #FFBA08;
}

.languages .last .sqaure-grid-item {
  margin-bottom: 12px;
}

@media screen and (max-width: 767px) {
  .recommendations .container-narrow {
    padding: 0;
  }
}

.certificates .last .sqaure-grid-item {
  margin-bottom: 24px;
}

.certificates .link {
  display: block;
  text-decoration: none;
  color: #666;
}

@media screen and (max-width: 767px) {
  .certificates .row > div:last-child .sqaure-grid-item {
    margin-bottom: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
